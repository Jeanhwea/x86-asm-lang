#+TITLE: 控制流
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2024-11-18 Mon>
#+STARTUP: overview num indent
#+OPTIONS: ^:nil


* 例子
#+BEGIN_SRC c
  if (eax == 0) {
    ebx = 11
  } else {
    ebx = 22
  }
#+END_SRC

#+BEGIN_SRC c
  int sum = 0;
  for (int i = 0; i < 100; i++ 0) {
     sum += i+1;
  }
#+END_SRC

goto 语句

* eflag 寄存器
|   Bit | Label | Description                   |
|-------+-------+-------------------------------|
|     0 | CF    | Carry flag                    |
|     2 | PF    | Parity flag                   |
|     4 | AF    | Auxiliary flag                |
|     6 | ZF    | Zero flag                     |
|     7 | SF    | Sign flag                     |
|     8 | TF    | Trap flag                     |
|     9 | IF    | Interrupt enable flag         |
|    10 | DF    | Direction flag                |
|    11 | OF    | Overflow flag                 |
| 12-13 | IOPL  | I/O privilege level           |
|    14 | NT    | Nested task flag              |
|    16 | RF    | Resume flag                   |
|    17 | VM    | Virtual 8086 mode flag        |
|    18 | AC    | Alignment check               |
|    19 | VIF   | Virtual interrupt flag        |
|    20 | VIP   | Virtual interrupt pending     |
|    21 | ID    | Able to use CPUID instruction |

* 比较 compare
#+BEGIN_SRC nasm
  cmp a, b
#+END_SRC

- 计算 a-b 的值
- 对于无符号数字计算，存在以下场景: ZF(Zero Flag), CF(Carry Flag)
  1. a=b => ZF=1, CF=0
  2. a>b => ZF=0, CF=0
  3. a<b => ZF=0, CF=1
- 对于有符号数字计算，存在以下场景: ZF(Zero Flag), OF(Overflow Flag), SF(Sign Flag)
  1. a=b => ZF=1
  2. a>b => ZF=0, OF = SF
  3. a<b => ZF=0, OF <> SF

* 分支 branch
#+BEGIN_SRC nasm
  jmp label
#+END_SRC

| 指令 | 条件                |
|------+---------------------|
| JZ   | branch only if ZF=1 |
| JNZ  | branch only if ZF=0 |
| JO   | branch only if OF=1 |
| JNO  | branch only if OF=0 |
| JS   | branch only if SF=1 |
| JNS  | branch only if SF=0 |
| JC   | branch only if CF=1 |
| JNC  | branch only if CF=0 |
| JP   | branch only if PF=1 |
| JNP  | branch only if PF=0 |

一些跳转的变种新形式
- SHORT 限制在 128 字节
- NEAR 大概限制在 32000 字节
- FAR 基本上只用于实模式切换保护模式

JE/JL/JNL

* 循环 loop
1. loop
   - ecx--, jump LABEL if ecx <> 0
2. loope, loopz
   - ecx--(但是不修改 eflags), jump LABEL if ecx <> 0 && ZF=1
3. loopne, loopnz
   - ecx--(但是不修改 eflags), jump LABEL if ecx <> 0 && ZF=0
