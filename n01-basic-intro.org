#+TITLE: 第一讲：基础介绍
#+AUTHOR: Jinghui Hu
#+EMAIL: hujinghui@buaa.edu.cn
#+DATE: <2024-10-25 Fri>
#+STARTUP: overview num indent
#+OPTIONS: ^:nil


* 数字系统
1. 十进制
2. 二进制
3. 十六进制

* X86 体系结构
** 寄存器
| 分类         | 英文全称            | 16 位 | 32 位 | 64 位 |
|--------------+---------------------+-------+-------+-------|
| 通用寄存器   | Accumulator         | ax    | eax   | rax   |
| 通用寄存器   | Base                | bx    | ebx   | rbx   |
| 通用寄存器   | Counter             | cx    | ecx   | rcx   |
| 通用寄存器   | Data                | dx    | edx   | rdx   |
| 指针寄存器   | Stack Pointer       | sp    | esp   | rsp   |
| 指针寄存器   | Base Pointer        | bp    | ebp   | rbp   |
| 变地址寄存器 | Source Index        | si    | esi   | rsi   |
| 变地址寄存器 | Destination Index   | di    | edi   | rdi   |
| 控制寄存器   | Instruction Pointer | ip    | eip   | rip   |
| 控制寄存器   | Flag                | flag  | eflag | eflag |
| 段寄存器     | Code Segment        | cs    | cs    | cs    |
| 段寄存器     | Data Segment        | ds    | ds    | ds    |
| 段寄存器     | Stack Segment       | ss    | ss    | ss    |
| 段寄存器     | Extra Segment       | es    | es    | es    |

** 内存

** CPU

* 编写一个汇编程序
** 汇编器
1. AS
2. NASM
3. MASM

** hello world
#+BEGIN_SRC asm
  section .data
          hello db 'Hello, World!', 10, 0

  section .text
          global _start

  _start:
          ; write the string to stdout
          mov eax, 4         ; system call number for sys_write
          mov ebx, 1         ; file descriptor 1 is stdout
          mov ecx, hello     ; pointer to the message
          mov edx, 14        ; length of the message
          int 0x80           ; interrupt to invoke system call

          ; exit the program
          mov eax, 1         ; system call number for sys_exit
          xor ebx, ebx       ; exit code 0
          int 0x80           ; interrupt to invoke system call
#+END_SRC
